plugins {
	id 'groovy'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.github.ben-manes.versions' version '0.52.0'
}

group = 'dev'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.apache.groovy:groovy:4.0.26'
	implementation 'org.apache.groovy:groovy-sql:4.0.26'
	runtimeOnly 'com.h2database:h2:2.3.232'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.12.0'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.12.0'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.12.0'
}

tasks.named('test') {
	useJUnitPlatform()
	jvmArgs '-Xshare:off'
}

def isNonStable = { String version ->
	def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
	def regex = /^[0-9,.v-]+(-r)?$/
	return !stableKeyword && !(version ==~ regex)
}

tasks.named('dependencyUpdates').configure {
	rejectVersionIf {
		isNonStable(it.candidate.version)
	}
}
